# Generated by Django 4.2.14 on 2024-08-10 21:38

import base_edcp.validators
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='Email')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date de Création')),
                ('username', models.CharField(blank=True, max_length=100, verbose_name="Nom d'utilisateur")),
                ('avatar', models.ImageField(blank=True, help_text='Photo de profil (facultative)', max_length=255, null=True, upload_to='avatars', verbose_name='Avatar')),
                ('nom', models.CharField(max_length=225, validators=[base_edcp.validators.validate_charfield, base_edcp.validators.validate_no_special_chars], verbose_name='Nom')),
                ('prenoms', models.CharField(max_length=255, validators=[base_edcp.validators.validate_charfield, base_edcp.validators.validate_no_special_chars], verbose_name='Prénoms')),
                ('organisation', models.CharField(blank=True, max_length=255, null=True, validators=[base_edcp.validators.validate_charfield, base_edcp.validators.validate_no_special_chars], verbose_name='Organisation')),
                ('telephone', models.CharField(blank=True, max_length=100, null=True, validators=[base_edcp.validators.validate_charfield, base_edcp.validators.validate_no_special_chars], verbose_name='Téléphone')),
                ('fonction', models.CharField(blank=True, max_length=255, null=True, validators=[base_edcp.validators.validate_charfield, base_edcp.validators.validate_no_special_chars], verbose_name='Fonction')),
                ('is_active', models.BooleanField(default=True, verbose_name='Est Actif')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Est Membre du Personnel')),
                ('email_verified', models.BooleanField(default=False, verbose_name='Email Vérifié')),
                ('must_reset', models.BooleanField(default=False, verbose_name='Doit Reinitialiser son Mot de Passe')),
                ('is_dpo', models.BooleanField(default=False, verbose_name='Est un Correspondant')),
                ('consentement', models.BooleanField(default=False, help_text="Veuillez cocher cette case pour donner votre consentement : \n        les données soumises via ce formulaire seront utilisées pour la création \n        et pour l'accomplissement de vos formalités sur la plateforme e-DCP. \n        Vos données ne seront traitées que par les agents habilités de l'Autorité de Protection.\n        Vous pouvez à tous moments exercer vos droits exercer à l'adresse ..... ", verbose_name='Je donne mon consentement')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Utilisateur',
                'verbose_name_plural': 'Utilisateurs',
            },
        ),
        migrations.CreateModel(
            name='Authentication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, verbose_name='Label')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
            ],
        ),
        migrations.CreateModel(
            name='Backup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, verbose_name='Label')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
            ],
        ),
        migrations.CreateModel(
            name='CasExemption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('casexemption', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='CategorieDCP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('categoriedcp', models.CharField(max_length=11)),
            ],
        ),
        migrations.CreateModel(
            name='CategorieTrait',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('categorie', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Donnee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, verbose_name='Label')),
                ('sensible', models.BooleanField(default=False, verbose_name='Sensible')),
                ('duree_conservation', models.CharField(blank=True, max_length=255, null=True, verbose_name='Durée de Conservation')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
            ],
        ),
        migrations.CreateModel(
            name='Finalite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, verbose_name='Label')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
            ],
        ),
        migrations.CreateModel(
            name='Fonction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fonction', models.CharField(max_length=100, verbose_name='Fonction')),
            ],
        ),
        migrations.CreateModel(
            name='FondJuridique',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=100)),
                ('description', models.TextField(verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Fondement Juridique',
                'verbose_name_plural': 'Fondements Juridique',
            },
        ),
        migrations.CreateModel(
            name='Hebergement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, verbose_name='Label')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
            ],
        ),
        migrations.CreateModel(
            name='Interco',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('destinataire', models.CharField(max_length=255, verbose_name='Destinataire')),
                ('mode', models.CharField(blank=True, max_length=255, null=True, verbose_name='Mode')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
            ],
        ),
        migrations.CreateModel(
            name='Legitimite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, verbose_name='Label')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
            ],
        ),
        migrations.CreateModel(
            name='ModeRecueilConsent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, verbose_name='Label')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
            ],
        ),
        migrations.CreateModel(
            name='Pays',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=100, verbose_name='Nom du Pays')),
            ],
            options={
                'verbose_name': 'Pays',
                'verbose_name_plural': 'Pays',
            },
        ),
        migrations.CreateModel(
            name='PersConcernee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, verbose_name='Label')),
                ('sensible', models.BooleanField(default=False, verbose_name='Sensible')),
                ('ordre', models.IntegerField(default=0, verbose_name='Ordre')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Personne Concernée',
                'verbose_name_plural': 'Personnes Concernées',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(max_length=100, verbose_name='Rôle')),
            ],
        ),
        migrations.CreateModel(
            name='Secteur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=100, verbose_name="Secteur d'Activité")),
                ('sensible', models.BooleanField(verbose_name='Est Sensible')),
                ('ordre', models.IntegerField(verbose_name="Ordre d'Affichage")),
            ],
        ),
        migrations.CreateModel(
            name='SecuritePhysique',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, verbose_name='Label')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
            ],
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, verbose_name='Label')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
            ],
        ),
        migrations.CreateModel(
            name='SupportCollecte',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, verbose_name='Label')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
            ],
        ),
        migrations.CreateModel(
            name='Transfert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pays', models.CharField(max_length=255, verbose_name='Pays')),
                ('destinataire', models.CharField(max_length=255, verbose_name='Destinataire')),
                ('mode', models.CharField(max_length=255, verbose_name='Mode')),
                ('type_destinataire', models.CharField(max_length=255, verbose_name='Type de Destinataire')),
            ],
        ),
        migrations.CreateModel(
            name='TypeClient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=100, verbose_name='Type de Client')),
                ('description', models.CharField(blank=True, max_length=100, null=True, verbose_name='Description du Type de Client')),
                ('sensible', models.BooleanField(default=False, null=True, verbose_name='Est Sensible')),
                ('ordre', models.IntegerField(default=0, null=True, verbose_name="Ordre d'Affichage")),
            ],
            options={
                'verbose_name': 'Type Client',
                'verbose_name_plural': 'Types Clients',
            },
        ),
        migrations.CreateModel(
            name='TypeDemandeAutorisation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(choices=[('autorisation_prealable', 'Autorisation Préalable'), ('biometrie', 'Biométrie'), ('videosurveillance', 'Vidéosurveillance'), ('transfert_donnees_hors_espace_cdeao', 'Transfert de Données Hors Espace CEDEAO'), ('notification_violation_donnees_personnelles', 'Notification de Violation des Données Personnelles'), ('violation_conformite', 'Violation de la Conformité'), ('analyse_impact_protection_donnees_personnelles', 'Analyse d’Impact sur la Protection des Données Personnelles'), ('mise_en_conformite', 'Mise en Conformité'), ('declaration_normale', 'Déclaration Normale'), ('agreement', 'Agrément'), ('attestation_conformite', 'Attestation Conformité'), ('geolocalisation', 'Géolocalisation')], max_length=255, unique=True, verbose_name="Type de Demande d'Autorisation")),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
            ],
        ),
        migrations.CreateModel(
            name='TypePiece',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=100, verbose_name="Type de pièce d'identité")),
                ('description', models.CharField(blank=True, max_length=100, null=True, verbose_name='Description du Type de pièce')),
                ('sensible', models.BooleanField(default=False, null=True, verbose_name='Est Sensible')),
                ('ordre', models.IntegerField(default=0, null=True, verbose_name="Ordre d'affichage")),
            ],
            options={
                'verbose_name': 'Type de pièce',
                'verbose_name_plural': 'Types de pièces',
            },
        ),
        migrations.CreateModel(
            name='SousFinalite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, verbose_name='Label')),
                ('sensible', models.BooleanField(default=False, verbose_name='Sensible')),
                ('ordre', models.IntegerField(default=0, verbose_name='Ordre')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('finalite', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sous_finalites', to='base_edcp.finalite', verbose_name='Finalité')),
            ],
        ),
        migrations.CreateModel(
            name='Securite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('authentications', models.ManyToManyField(related_name='securite_auth', to='base_edcp.authentication', verbose_name='Authentification')),
                ('backups', models.ManyToManyField(related_name='securite_backup', to='base_edcp.backup', verbose_name='Backup')),
                ('hebergement', models.ManyToManyField(related_name='securite_hebergement', to='base_edcp.hebergement', verbose_name='Hébergement')),
                ('protect_physique', models.ManyToManyField(related_name='securite_protect', to='base_edcp.securitephysique', verbose_name='Protection Physique')),
                ('supports_collecte', models.ManyToManyField(related_name='securite_supports', to='base_edcp.supportcollecte', verbose_name='Supports de Collecte')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date et heure de création')),
                ('is_read', models.BooleanField(default=False, verbose_name='Est lu')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
        ),
        migrations.CreateModel(
            name='JournalTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField()),
                ('transaction', models.CharField(max_length=100)),
                ('cible', models.CharField(max_length=100)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Journal Transaction',
                'verbose_name_plural': 'Journals Transactions',
            },
        ),
        migrations.CreateModel(
            name='Habilitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(verbose_name='Date de Création')),
                ('fonction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base_edcp.fonction')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base_edcp.role')),
            ],
        ),
        migrations.CreateModel(
            name='Enregistrement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de Création')),
                ('raisonsociale', models.CharField(help_text="Nom de la personne physique ou de l'organisation à enregistrer", max_length=100, validators=[base_edcp.validators.validate_charfield, base_edcp.validators.validate_no_special_chars], verbose_name='Nom ou Raison Sociale')),
                ('idu', models.CharField(blank=True, max_length=100, null=True, verbose_name="Numéro d'IDentifiant Unique")),
                ('representant', models.CharField(blank=True, max_length=100, verbose_name='Nom du représentant légal')),
                ('rccm', models.CharField(blank=True, max_length=100, null=True, validators=[base_edcp.validators.validate_charfield, base_edcp.validators.validate_no_special_chars, base_edcp.validators.validate_rccm_idu], verbose_name='Numéro RCCM')),
                ('telephone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Téléphone')),
                ('email_contact', models.EmailField(max_length=100, null=True, verbose_name='Email de Contact')),
                ('site_web', models.URLField(blank=True, max_length=100, null=True, verbose_name='Site Web')),
                ('ville', models.CharField(max_length=100, null=True, validators=[base_edcp.validators.validate_charfield, base_edcp.validators.validate_no_special_chars], verbose_name='Ville')),
                ('adresse_geo', models.CharField(blank=True, max_length=100, null=True, validators=[base_edcp.validators.validate_charfield, base_edcp.validators.validate_no_special_chars], verbose_name='Adresse Géographique')),
                ('adresse_bp', models.CharField(blank=True, max_length=100, null=True, verbose_name='Boîte Postale')),
                ('gmaps_link', models.URLField(blank=True, max_length=255, null=True, verbose_name='Lien Google Maps')),
                ('effectif', models.IntegerField(blank=True, null=True, verbose_name='Effectif')),
                ('presentation', models.TextField(blank=True, max_length=255, null=True, verbose_name="Présentation de l'activité")),
                ('num_piece', models.CharField(blank=True, max_length=100, null=True, verbose_name='Numéro de la pièce')),
                ('has_dpo', models.BooleanField(default=False, verbose_name='A désigné un Correspondant')),
                ('file_piece', models.FileField(blank=True, help_text='Formats acceptés images et documents PDF : jpg, jpeg, png, pdf. Taille limite: 8 Mb.', null=True, upload_to='docs/enregistrement', validators=[base_edcp.validators.validate_files, django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'jpg', 'jpeg', 'png'])], verbose_name="Pièce d'identité")),
                ('file_rccm', models.FileField(blank=True, help_text='Formats acceptés images et documents PDF : jpg, jpeg, png, pdf. Taille limite: 8 Mb.', null=True, upload_to='docs/enregistrement', validators=[base_edcp.validators.validate_files, django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'jpg', 'jpeg', 'png'])], verbose_name='Copie du Registre du Commerce')),
                ('file_mandat', models.FileField(blank=True, help_text="Si vous n'êtes pas le représentant légal, Joindre un mandat signé par le représentatnt légal de l'organisation", null=True, upload_to='docs/enregistrement', validators=[base_edcp.validators.validate_files, django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'jpg', 'jpeg', 'png'])], verbose_name='Mandat de représentation')),
                ('pays', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base_edcp.pays', verbose_name='Pays')),
                ('secteur', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base_edcp.secteur', verbose_name="Secteur d'Activité")),
                ('type_piece', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='base_edcp.typepiece', verbose_name="Type de pièce d'identité")),
                ('typeclient', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base_edcp.typeclient', verbose_name='Type de Client')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Enregistrement',
                'verbose_name_plural': 'Enregistrements',
            },
        ),
        migrations.CreateModel(
            name='DonneeTraitee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, verbose_name='Label')),
                ('sensible', models.BooleanField(default=False, verbose_name='Sensible')),
                ('duree_conservation', models.CharField(blank=True, max_length=255, null=True, verbose_name='Durée de Conservation')),
                ('id_categorie', models.CharField(blank=True, max_length=255, null=True, verbose_name='ID Catégorie')),
                ('donnees', models.ManyToManyField(related_name='donnees_traitees', to='base_edcp.donnee', verbose_name='Données')),
            ],
        ),
        migrations.CreateModel(
            name='Autorisation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_autorisation', models.CharField(max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('enregistrement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='autorisations', to='base_edcp.enregistrement')),
            ],
        ),
    ]
