# Generated by Django 4.2.14 on 2024-09-03 01:21

import base_edcp.validators
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('options', '0001_initial'),
        ('base_edcp', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ActionDemande',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(help_text='Codification du champ, à écrire sous forme de slug', max_length=100, unique=True, verbose_name='Label')),
                ('is_sensible', models.BooleanField(default=False, verbose_name='Sensible ?')),
                ('description', models.CharField(blank=True, help_text='Description du champ, affichée sur les formulaire', max_length=255, null=True, verbose_name='Description du champ')),
                ('resume', models.TextField(blank=True, help_text='Paragraphe plus long que la description fournissant des détails sur le champ', max_length=500, null=True, verbose_name='Résumé du champ (texte explicatif)')),
                ('ordre', models.IntegerField(default=0, verbose_name="Ordre d'affichage")),
            ],
            options={
                'verbose_name': 'Action effectuée',
                'verbose_name_plural': 'Actions effectuées',
            },
        ),
        migrations.CreateModel(
            name='AnalyseDemande',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de Création')),
                ('updated_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de Création')),
                ('evaluation', models.TextField(blank=True, help_text="Contenu de l'évaluation selon les critères définis et sous forme sérialisée.", null=True, verbose_name='Evaluation de la demande')),
                ('observations', models.TextField(blank=True, null=True, verbose_name='Observations sur la demande')),
                ('prescriptions', models.TextField(blank=True, null=True, verbose_name='Prescriptions et recommandations')),
                ('avis_juridique', models.BooleanField(default=False, verbose_name='Avis juridique (autoriser ou non)')),
                ('avis_technique', models.BooleanField(default=False, verbose_name='Avis technique (autoriser ou non)')),
                ('niv_validation', models.IntegerField(default=0, verbose_name="Niveau de validation actuel de l'analyse")),
                ('is_locked', models.BooleanField(default=False, verbose_name='Est verrouillée (en cours de validation)')),
                ('is_closed', models.BooleanField(default=False, verbose_name='Est terminée')),
                ('created_by', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='analyse_created', to=settings.AUTH_USER_MODEL, verbose_name='Agent en charge de la demande')),
            ],
            options={
                'verbose_name': "Analyse d'une demande",
                'verbose_name_plural': 'Analyses des demandes',
                'permissions': [('can_validate_niv_1', 'Peut valider la demande - niveau 1'), ('can_validate_niv_2', 'Peut valider la demande - niveau 2'), ('can_validate_niv_3', 'Peut valider la demande - niveau 3'), ('can_validate_niv_4', 'Peut valider la demande - niveau 4'), ('can_validate_niv_5', 'Peut valider la demande - niveau 5')],
            },
        ),
        migrations.CreateModel(
            name='CategorieDemande',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(help_text='Codification du champ, à écrire sous forme de slug', max_length=100, unique=True, verbose_name='Label')),
                ('is_sensible', models.BooleanField(default=False, verbose_name='Sensible ?')),
                ('description', models.CharField(blank=True, help_text='Description du champ, affichée sur les formulaire', max_length=255, null=True, verbose_name='Description du champ')),
                ('resume', models.TextField(blank=True, help_text='Paragraphe plus long que la description fournissant des détails sur le champ', max_length=500, null=True, verbose_name='Résumé du champ (texte explicatif)')),
                ('ordre', models.IntegerField(default=0, verbose_name="Ordre d'affichage")),
                ('niv_validation', models.IntegerField(default=1, verbose_name='Niveau de validation')),
                ('intitule_reponse', models.CharField(blank=True, max_length=255, null=True, verbose_name='Intitulé de la réponse pour ce type de demande.')),
            ],
            options={
                'verbose_name': 'Categorie de demande',
                'verbose_name_plural': 'Categories de demandes',
            },
        ),
        migrations.CreateModel(
            name='Demande',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de Création')),
                ('updated_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date de mise à jour')),
                ('num_demande', models.CharField(blank=True, max_length=100, null=True, verbose_name='Numéro de la demande')),
                ('finished_at', models.DateTimeField(blank=True, null=True, verbose_name='Date de fin de traitement.')),
                ('is_locked', models.BooleanField(default=False, verbose_name='Est verrouillée (en cours de validation)')),
                ('reponse_ok', models.BooleanField(null=True, verbose_name='Réponse favorable')),
                ('analyse', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='demande.analysedemande', verbose_name='Analyse de la demande')),
                ('categorie', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='demande.categoriedemande', verbose_name='Categorie de la demande')),
                ('created_by', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='demande_created', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur effectuant la demande')),
                ('organisation', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='base_edcp.enregistrement', verbose_name='Organisation')),
                ('status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='options.status', verbose_name='Statut de la demande')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='demande_updated', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur ayant effectué la dernière mises à jour.')),
            ],
            options={
                'verbose_name': 'Demande',
                'verbose_name_plural': 'Demandes',
            },
        ),
        migrations.CreateModel(
            name='TypeReponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(help_text='Codification du champ, à écrire sous forme de slug', max_length=100, unique=True, verbose_name='Label')),
                ('is_sensible', models.BooleanField(default=False, verbose_name='Sensible ?')),
                ('description', models.CharField(blank=True, help_text='Description du champ, affichée sur les formulaire', max_length=255, null=True, verbose_name='Description du champ')),
                ('resume', models.TextField(blank=True, help_text='Paragraphe plus long que la description fournissant des détails sur le champ', max_length=500, null=True, verbose_name='Résumé du champ (texte explicatif)')),
                ('ordre', models.IntegerField(default=0, verbose_name="Ordre d'affichage")),
            ],
            options={
                'verbose_name': 'Type de réponse',
                'verbose_name_plural': 'Types de réponses',
            },
        ),
        migrations.CreateModel(
            name='ValidationDemande',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de signature')),
                ('niveau_validation', models.IntegerField(default=1, verbose_name='Niveau de validation effectué')),
                ('avis', models.BooleanField(blank=True, null=True, verbose_name="Avis sur l'analsye et le projet de réponse")),
                ('observations', models.TextField(blank=True, null=True, verbose_name="Observations sur l'analyse ou le projet de réponse")),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Agent effectuant la validation')),
            ],
        ),
        migrations.CreateModel(
            name='ReponseDemande',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de signature')),
                ('intitule', models.CharField(blank=True, max_length=255, null=True, verbose_name='Intitulé de la réponse')),
                ('titre_destinataire', models.CharField(blank=True, help_text='Exemple : "Monsieur le Directeur Général" ou "Monsieur XXX"', max_length=255, null=True, verbose_name='Titre du destinataire')),
                ('adresse_destinataire', models.CharField(blank=True, help_text='Adresse à indiquer sur le courrier', max_length=255, null=True, verbose_name='Adresse du destinataire')),
                ('num_autorisation', models.CharField(blank=True, max_length=100, null=True, verbose_name='Numéro de la demande')),
                ('fichier_reponse', models.FileField(blank=True, help_text='Formats acceptés images et documents PDF : jpg, jpeg, png, pdf. Taille limite: 8 Mb.', null=True, upload_to='docs/reponses', validators=[base_edcp.validators.validate_files, django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'jpg', 'jpeg', 'png'])], verbose_name='Fichier de la réponse')),
                ('signataire', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Validateur signant la réponse')),
                ('type_reponse', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='demande.typereponse', verbose_name='Type de réponse')),
            ],
        ),
        migrations.CreateModel(
            name='HistoriqueDemande',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de Création')),
                ('is_private', models.BooleanField(default=False, verbose_name='Est confidentiel')),
                ('action', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='demande.actiondemande', verbose_name='Action effectuée')),
                ('auteur', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Auteur')),
                ('demande', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='demande.demande', verbose_name='Demande')),
                ('status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='options.status', verbose_name='Statut de la demande')),
            ],
            options={
                'verbose_name': 'Historique de la demande',
                'verbose_name_plural': 'Historiques des demandes',
            },
        ),
        migrations.CreateModel(
            name='CritereEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(help_text='Doit être indiqué sous forme de slug (pas de caractère speciaux et des espaces au lieu des tirets)', max_length=255, null=True, verbose_name='Identifiant du champ')),
                ('field_name', models.CharField(max_length=255, verbose_name="Nom du champ à afficher sur le formulaire d'évaluation")),
                ('field_type', models.CharField(choices=[('text', 'Champ de texte'), ('number', 'Valeur numérique'), ('select', 'Liste déroulante'), ('checkbox', 'Case à cocher'), ('textarea', 'Zone de texte')], default='select', max_length=255, verbose_name='Type du champ')),
                ('field_required', models.BooleanField(default=True, verbose_name='Champ obligatoire')),
                ('categorie_demande', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='demande.categoriedemande', verbose_name="Categorie de demande pour laquelle ce critère d'evaluation est applicable")),
            ],
        ),
        migrations.CreateModel(
            name='Commentaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de Création')),
                ('objet', models.CharField(blank=True, max_length=255, null=True, verbose_name='Objet du message')),
                ('message', models.TextField(blank=True, max_length=500, null=True, verbose_name='Contenu du message')),
                ('is_new', models.BooleanField(default=True)),
                ('auteur', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Auteur')),
                ('demande', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='demande.demande', verbose_name="Demande d'autorisation")),
            ],
            options={
                'verbose_name': 'Commentaire sur une demande',
                'verbose_name_plural': 'Commentaires sur des demandes',
            },
        ),
        migrations.AddField(
            model_name='categoriedemande',
            name='types_reponses',
            field=models.ManyToManyField(blank=True, to='demande.typereponse', verbose_name='Types de réponse pour ce type de demande.'),
        ),
        migrations.AddField(
            model_name='analysedemande',
            name='projet_reponse',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='demande.reponsedemande', verbose_name='Réponse apportée à la demande'),
        ),
        migrations.AddField(
            model_name='analysedemande',
            name='status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='options.status', verbose_name='Statut de la demande'),
        ),
        migrations.AddField(
            model_name='analysedemande',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='analyse_updated', to=settings.AUTH_USER_MODEL, verbose_name="Agent auteur de la dernière mise à jour de l'analyse"),
        ),
        migrations.AddField(
            model_name='analysedemande',
            name='validation_niv1',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='analyse_validate_niv1', to='demande.validationdemande', verbose_name='Validation de la demande - niveau 1'),
        ),
        migrations.AddField(
            model_name='analysedemande',
            name='validation_niv2',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='analyse_validate_niv2', to='demande.validationdemande', verbose_name='Validation de la demande - niveau 2'),
        ),
        migrations.AddField(
            model_name='analysedemande',
            name='validation_niv3',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='analyse_validate_niv3', to='demande.validationdemande', verbose_name='Validation de la demande - niveau 3'),
        ),
        migrations.AddField(
            model_name='analysedemande',
            name='validation_niv4',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='analyse_validate_niv4', to='demande.validationdemande', verbose_name='Validation de la demande - niveau 4'),
        ),
        migrations.AddField(
            model_name='analysedemande',
            name='validation_niv5',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='analyse_validate_niv5', to='demande.validationdemande', verbose_name='Validation de la demande - niveau 5'),
        ),
        migrations.AddField(
            model_name='analysedemande',
            name='validations',
            field=models.ManyToManyField(blank=True, to='demande.validationdemande', verbose_name='Liste des validations'),
        ),
    ]
